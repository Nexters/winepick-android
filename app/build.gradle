apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlinx-serialization'

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.2"

    defaultConfig {
        applicationId "kr.co.nexters.winepick"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    // lifecycle
    // Android KTX
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"


    // testing
    testImplementation "androidx.test:runner:1.3.0"
    testImplementation "androidx.test.espresso:espresso-core:3.3.0"
    testImplementation "androidx.test.ext:junit:1.1.2"
    testImplementation "org.robolectric:robolectric:4.5"
    testImplementation 'io.mockk:mockk:1.10.0'

    androidTestImplementation 'androidx.test:core-ktx:1.3.0'
    androidTestImplementation "androidx.test:runner:1.3.0"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.3.0"
    androidTestImplementation "androidx.test.ext:junit:1.1.2"

    // kotlinx-serialization
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.0.1")

    // Retrofit2
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava3:2.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.5.0'
    implementation "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter:0.8.0"


    // RxJava3
    implementation "io.reactivex.rxjava3:rxjava:3.0.6"
    implementation 'io.reactivex.rxjava3:rxkotlin:3.0.1'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'

    // Ktor (예제만 남겨놓음)
    implementation("io.ktor:ktor-client-cio:1.5.1")
    implementation("io.ktor:ktor-client-okhttp:1.5.1")
    implementation("io.ktor:ktor-client-json:1.5.1")
    implementation("io.ktor:ktor-client-serialization-jvm:1.5.1")
    implementation("io.ktor:ktor-client-logging-jvm:1.5.1")

    //lottie
    implementation 'com.airbnb.android:lottie:3.4.1'

    //timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    //이미지 glide
    implementation "com.github.bumptech.glide:glide:4.11.0"
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation "com.github.bumptech.glide:okhttp3-integration:4.11.0"
    kapt "android.arch.lifecycle:compiler:1.1.1"

}
